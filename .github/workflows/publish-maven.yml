name: Publish Maven Package

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      continue: ${{ steps.should_continue.outputs.continue }}
    steps:
      - name: Get Current Release
        id: current_release
        uses: joutvhu/get-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Should continue
        id: should_continue
        run: |
          echo "::set-output name=continue::${{ github.event_name == 'workflow_dispatch' || contains(steps.current_release.outputs.tag_name, '_spring') || !contains(steps.current_release.outputs.tag_name, '_') }}"

  build:
    runs-on: ubuntu-latest
    needs: prepare
    if: ${{ needs.prepare.outputs.continue == 'true' }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Write Secret Key Ring File
        uses: joutvhu/write-file@v1
        with:
          path: spring/secrets/secret-key.gpg
          contents: ${{ secrets.GPG_SECRET_KEY_BASE64 }}
          write_mode: overwrite
          encoding: base64

      - name: Write Gradle Properties File
        uses: joutvhu/write-file@v1
        with:
          path: spring/gradle.properties
          contents: ${{ secrets.GRADLE_SECRET_PROPERTIES }}
          write_mode: overwrite

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: spring

      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: spring

      - name: Get Current Release
        id: get_current_release
        uses: joutvhu/get-release@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Sonatype Packages
        run: ./gradlew publishMavenPublicationToSonatypeRepository
        working-directory: spring

      - name: Publish to GitHub Packages
        if: ${{ github.event_name == 'release' && steps.get_current_release.outputs.prerelease == 'false' && steps.get_current_release.outputs.draft == 'false' }}
        run: ./gradlew publishMavenPublicationToGithubRepository
        working-directory: spring
