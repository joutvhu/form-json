name: Publish NuGet Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      validate:
        type: choice
        description: Should validate nupkg?
        options:
          - true
          - false

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      continue: ${{ steps.should_continue.outputs.continue }}
    steps:
      - name: Get Current Release
        id: current_release
        uses: joutvhu/get-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Should continue
        id: should_continue
        run: |
          echo "::set-output name=continue::${{ github.event_name == 'workflow_dispatch' || contains(steps.current_release.outputs.tag_name, '_aspnet') || !contains(steps.current_release.outputs.tag_name, '_') }}"

  build:
    runs-on: windows-latest
    needs: prepare
    if: ${{ needs.prepare.outputs.continue == 'true' }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Create NuGet package
        run: dotnet pack --configuration Release --output ./nuget
        working-directory: aspnet

      - name: Install NuGet validator
        if: ${{ github.event.inputs.validate == true }}
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

      - name: Validate package
        if: ${{ github.event.inputs.validate == true }}
        run: meziantou.validate-nuget-package (Get-ChildItem "./nuget/*.nupkg")
        working-directory: aspnet

      - name: Run tests
        run: dotnet test --configuration Release
        working-directory: aspnet

      - name: Get Current Release
        id: get_current_release
        uses: joutvhu/get-release@v1
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Publish to NuGet Registry
      #   run: |
      #     foreach($file in (Get-ChildItem "./nuget" -Recurse -Include *.nupkg)) {
      #       dotnet nuget push $file --api-key "${{ secrets.NUGET_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
      #     }
      #   working-directory: aspnet

      - name: Publish to GitHub Registry
        if: ${{ github.event_name == 'release' && steps.get_current_release.outputs.prerelease == 'false' && steps.get_current_release.outputs.draft == 'false' }}
        run: |
          foreach($file in (Get-ChildItem "./nuget" -Recurse -Include *.nupkg)) {
            dotnet nuget push $file --username joutvhu --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github --source https://nuget.pkg.github.com/joutvhu/form-json/index.json --skip-duplicate
          }
        working-directory: aspnet
